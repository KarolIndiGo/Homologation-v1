-- Workspace: SQLServer
-- Item: INDIGO040 [SQL]
-- ItemId: SPN
-- Schema: Report
-- Object: SPAdministrativeNotes
-- Extracted by Fabric SQL Extractor SPN v3.9.0







    /*******************************************************************************************************************
Nombre: [Report].[SPAdministrativeNotes]
Tipo:Procedimiento Almacenado
Observacion: Procedimiento almacenado bidimencional para que retorne los datos de la nota administrativa en una sola fila y la cavesera de cada tipo de nota
       sean dinamica.
Profesional: Nilsson Miguel Galindo Lopez
Fecha:06-10-2023
---------------------------------------------------------------------------
Modificaciones
_____________________________________________________________________________
Version 2
Persona que modifico:Nilsson Miguel Galindo Lopez
Fecha:14-03-2024
Ovservaciones: Se agrega la tabla dbo.NTXVARIABLES en la consulta para la asignación de la variable @NOTASADMINISTRATIVAS, para que las variables
         sean solo variables activas.
--------------------------------------
Version 3
Persona que modifico:
Observacion:
Fecha:
--------------------------------------------------------------------------------------------
--***********************************************************************************************************************************/

CREATE PROCEDURE [Report].[SPAdministrativeNotes]
@IDNOTAADMINISTRATIVA INT, 
@FECHAINICIAL DATE,
@FECHAFINAL DATE
AS
BEGIN

  --DECLARE @IDNOTAADMINISTRATIVA INT='4'
  --DECLARE @FECHAINICIAL DATE='2024-01-01'
  --DECLARE @FECHAFINAL DATE='2024-01-31'


  --SE DECLARA LA VARIABLES TABLAS

  DECLARE @VARIABLE TABLE (CONTAR INT,
               VARIABLE VARCHAR(150));
  DECLARE @HOMOLOGARVAL TABLE(CONTAR INT,
                VARIABLE VARCHAR(150),
                ID INT)
  DECLARE @NOTASADMINISTRATIVAS TABLE(ESLID INT,
                    VARIABLE VARCHAR(150),
                    NADID INT,
                    VALOR VARCHAR(MAX),
                    NTACID INT)


  --SE INSERTAN DATOS DE LAS TABLAS VARIABLES
  ------------------------------------------------------------
  INSERT INTO @NOTASADMINISTRATIVAS
  SELECT
  ESL.ID,VARIABLE,NAD.ID,NTAD.VALOR+' '+ISNULL('.'+VAL.DESCRIPCION,'') AS VALOR,NTAC.ID
  FROM 
  dbo.NTADMINISTRATIVAS NAD 
  INNER JOIN dbo.NTNOTASADMINISTRATIVASC NTAC ON NAD.ID=NTAC.IDNOTAADMINISTRATIVA 
  INNER JOIN dbo.NTNOTASADMINISTRATIVASD NTAD ON NTAC.ID=NTAD.IDNTNOTASADMINISTRATIVASC 
  INNER JOIN dbo.NTVARIABLES ESL ON NTAD.IDNTVARIABLE=ESL.ID 
  INNER JOIN dbo.NTXVARIABLES NTX ON NAD.ID=NTX.IDNTADMINISTRATIVAS AND ESL.ID=NTX.IDNTVARIABLES AND NTX.ESTADO=1
  LEFT JOIN dbo.NTVARIABLESL VAL ON ESL.ID=VAL.IDNTVARIABLE AND NTAD.VALOR=VAL.CODIGO
  where NAD.ID=@IDNOTAADMINISTRATIVA AND CAST(NTAC.FECHACREACION AS DATE) BETWEEN @FECHAINICIAL AND @FECHAFINAL
  -------------------------------------------------------------
  --trae el numero de variables de una nota y le asigna un numero unico para el ciclo mientras
  INSERT INTO @VARIABLE
  select 
  ROW_NUMBER ( )   
  OVER(ORDER BY ESLID) AS CONTAR,
  VARIABLE
  FROM 
  @NOTASADMINISTRATIVAS
  GROUP BY VARIABLE,ESLID
  --------------------------------------------------------------
  INSERT INTO @HOMOLOGARVAL
  SELECT A.*,ESL.ID 
  FROM @VARIABLE A INNER JOIN 
  dbo.NTVARIABLES ESL ON A.VARIABLE=ESL.VARIABLE 
  -------------------------------------------------------------

  ---INSERTAR DATOS EN LA TABLA TEMPORAL

  SELECT 
  SC.ID,
  SC.IPCODPACI AS IDENTIFICACION,
  SC.NUMINGRES AS INGRESO,
  SC.FECHACREACION AS [FECHA CREACION],
  SEG.CODUSUARI AS [CODIGO USUARIO CREACION],
  SEG.NOMUSUARI AS [USUARIO CREACION] 
  INTO #TABLA 
  FROM 
  NTNOTASADMINISTRATIVASC SC 
  INNER JOIN dbo.SEGusuaru SEG ON SC.CODUSUARI=SEG.CODUSUARI
  WHERE IDNOTAADMINISTRATIVA=@IDNOTAADMINISTRATIVA AND CAST(FECHACREACION AS DATE) BETWEEN @FECHAINICIAL AND @FECHAFINAL

  --SE DECLARAN LAS VARIABLES PARA EL ANALISIS UNIDIMENCIONAL 
  DECLARE @I INT=1
  DECLARE @DATOS INT=(SELECT COUNT(*) FROM @VARIABLE)
  DECLARE @VARIABLES VARCHAR(MAX)
  DECLARE @SQL NVARCHAR(MAX);
  DECLARE @IDTABLA INT,@CONTARTABLA INT,@J INT,@IDVARIABLE INT,@VARIABLESL VARCHAR(MAX), @CONTARTABLE INT,@VALOR VARCHAR(50)

  --SE CREA EL CLICO MIENTRAS PARA AGREGAR LAS DIFERENTES COLUMNAS CON LOS NOMBRES DE LAS VARIABLES DE CADA NOTA
  WHILE @I<=@DATOS
  BEGIN
    SET @VARIABLES=(SELECT VARIABLE FROM @VARIABLE WHERE CONTAR=@I);
    SET @SQL= N'ALTER TABLE #TABLA ADD '+ QUOTENAME(@VARIABLES)+ N' VARCHAR(MAX)';
    SET @I=@I+1
    EXEC sp_executesql @SQL;
  END
  /***********************************************/
  -------ALTERAR TABLA PARA QUITAR EL ENTITY------
  /************************************************/
  ALTER TABLE #TABLA ADD IDTABLA INT ;
  UPDATE #TABLA SET IDTABLA = ID;
  ALTER TABLE #TABLA DROP COLUMN ID;
  ALTER TABLE #TABLA ADD IDAUTO INT IDENTITY (1,1);
  ------------------------------------------

  SET @I=1
  SET @CONTARTABLA=(SELECT COUNT(*) FROM #TABLA)
  --CICLO MIENTRAS PARA PARA RECORRER COLUMNAS Y FILAS Y ACTUALIZAR LA TABLA TEMPORAL
  WHILE @I<=@CONTARTABLA
  BEGIN
    SET @J=1
    SET @IDTABLA=(SELECT IDTABLA FROM #TABLA WHERE IDAUTO=@I)
      WHILE @J<=@DATOS
      BEGIN
         SET @IDVARIABLE=(SELECT ID FROM @HOMOLOGARVAL WHERE CONTAR=@J)
         SET @VARIABLESL=(SELECT VARIABLE FROM @HOMOLOGARVAL WHERE CONTAR=@J)
         SET @VALOR=(SELECT VALOR FROM @NOTASADMINISTRATIVAS WHERE NTACID=@IDTABLA AND ESLID=@IDVARIABLE)
         IF @VALOR NOT LIKE '%'+CHAR(39)+'%' -- NO PERMITA DATOS QUE CONTENGAN (')
         BEGIN
          SET @SQL= N'UPDATE #TABLA SET '+QUOTENAME(@VARIABLESL)+' = '+CHAR(39)+@VALOR+CHAR(39)+' WHERE CAST(IDAUTO AS VARCHAR(5))='+CAST(@I AS VARCHAR(5))
         END
         EXEC sp_executesql @SQL;
         SET @J=@J+1
      END
      SET @I=@I+1
      --SELECT @I,@J
  END

  SELECT 
  TIPO.SIGLA AS [TIPO IDENTIFICACION], 
  PAC.IPNOMCOMP AS [NOMBRE PACIENTE],EN.NOMENTIDA AS ENTIDAD, A.* 
  FROM #TABLA A INNER JOIN
  dbo.INPACIENT PAC ON A.IDENTIFICACION=PAC.IPCODPACI LEFT JOIN
  dbo.ADINGRESO ING ON A.INGRESO=ING.NUMINGRES LEFT JOIN
  dbo.INENTIDAD EN ON ISNULL(ING.CODENTIDA,PAC.CODENTIDA)=EN.CODENTIDA
  LEFT JOIN dbo.ADTIPOIDENTIFICA TIPO ON PAC.IPTIPODOC=TIPO.CODIGO


   DROP TABLE #TABLA

END


--select * from #TABLA


--SELECT 
--NAD.ID AS [ID NOTAS],
--NAD.NOMBRE AS [NOMBRE NOTA],
--NTAC.FECHACREACION AS [FECHA REGISTRO],
--NTAC.IPCODPACI AS [IDENTIFICACION],
--PAC.IPNOMCOMP AS [PACIENTE],
--NTAC.NUMINGRES AS [INGRESO],CASE NTAC.NOTANOFACTURABLE WHEN 1 THEN 'SI' ELSE 'NO' END AS [NOTA FACTURABLE],
--GRU.NOMBRE AS [GRUPO],
--ESL.ID AS [ID VARIABLE],
--ESL.VARIABLE,
--NTAD.VALOR,
--VAL.DESCRIPCION
--FROM 
--dbo.NTADMINISTRATIVAS NAD INNER JOIN
--dbo.NTNOTASADMINISTRATIVASC NTAC ON NAD.ID=NTAC.IDNOTAADMINISTRATIVA INNER JOIN
--dbo.NTNOTASADMINISTRATIVASD NTAD ON NTAC.ID=NTAD.IDNTNOTASADMINISTRATIVASC INNER JOIN
--dbo.INPACIENT PAC ON NTAC.IPCODPACI=PAC.IPCODPACI INNER JOIN
--dbo.NTVARIABLES ESL ON NTAD.IDNTVARIABLE=ESL.ID INNER JOIN
--dbo.NTGRUPOS GRU ON NTAD.IDGRUPO=GRU.ID LEFT JOIN
--dbo.NTVARIABLESL VAL ON ESL.ID=VAL.IDNTVARIABLE AND NTAD.VALOR=VAL.CODIGO
--WHERE NAD.ID='2' and cast(NTAC.FECHACREACION as date)='2023-10-19' and NTAC.IPCODPACI='51566997'
--GO


